// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/b/RAM4K.hdl
/**
 * Memory of 4K 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    //we can now use the previous RAM512 to get 4096
    // 4096 = 8*8*8*8 which is 8*512
    // we make RAM4K using 8*RAM512

    //first we read using DMux8way
    //the in has 3 "places" for address
    //we look at the 3 LSB bits
    DMux8Way(in= load, sel= address[9..11], a= load0, b= load1, c= load2, d= load3, e= load4, f= load5, g= load6, h= load7);
    // address[0..8] is the the 9 MSB for thr RAM512 -> takes 6 and 3 
    RAM512(in=in, load=load0, address=address[0..8], out=ram0);
    RAM512(in=in, load=load1, address=address[0..8], out=ram1);
    RAM512(in=in, load=load2, address=address[0..8], out=ram2);
    RAM512(in=in, load=load3, address=address[0..8], out=ram3);
    RAM512(in=in, load=load4, address=address[0..8], out=ram4);
    RAM512(in=in, load=load5, address=address[0..8], out=ram5);
    RAM512(in=in, load=load6, address=address[0..8], out=ram6);
    RAM512(in=in, load=load7, address=address[0..8], out=ram7);
    //select one one of the eight RAM64
    Mux8Way16(a= ram0, b= ram1, c= ram2, d= ram3, e= ram4, f= ram5, g= ram6, h= ram7, sel= address[9..11], out= out);
}